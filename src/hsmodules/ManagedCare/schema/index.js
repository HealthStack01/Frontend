import { Avatar } from '@mui/material';
import { format, formatDistanceToNowStrict } from 'date-fns';
import PatientName from '../components/PatientName';

export const EnrolleSchema = [
	{
		name: 'S/N',
		key: 'sn',
		description: 'SN',
		selector: row => row.sn,
		sortable: true,
		inputType: 'HIDDEN',
		width: '50px',
	},
	{
		name: 'Image',
		key: 'sn',
		description: 'Enter name of employee',
		selector: row => <Avatar src={row?.imageurl} />,
		sortable: true,
		inputType: 'HIDDEN',
		width: '80px',
	},
	{
		name: 'First Name',
		key: 'firstname',
		description: 'First Name',
		selector: row => row?.firstname,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

	{
		name: 'Last Name',
		key: 'lastname',
		description: 'Last Name',
		selector: row => row?.lastname,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Payment',
		key: 'payment',
		description: 'Payment',
		selector: row =>
			row?.paymentinfo
				.map(item => `${item.paymentmode} - `)
				.join('')
				.slice(0, -2),
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Age',
		key: 'age',
		description: 'Age',
		selector: row =>
			row?.dob ? formatDistanceToNowStrict(new Date(row?.dob)) : '',
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

	{
		name: 'Gender',
		key: 'gender',
		description: 'Gender',
		selector: row => row?.gender,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Phone',
		key: 'phone',
		description: 'Phone',
		selector: row => row?.phone,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Email',
		key: 'email',
		description: 'Email',
		selector: row => row?.email,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Tags',
		key: 'tags',
		description: 'Tags',
		selector: row => row?.clientTags,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
];

export const EnrolleSchema2 = [
	{
		name: 'S/N',
		key: 'sn',
		description: 'SN',
		selector: row => row.sn,
		sortable: true,
		inputType: 'HIDDEN',
		width: '50px',
	},
	{
		name: 'Image',
		key: 'sn',
		description: 'Enter name of employee',
		selector: row => <Avatar src={row?.imageurl} />,
		sortable: true,
		inputType: 'HIDDEN',
		width: '80px',
	},
	{
		name: 'First Name',
		key: 'firstname',
		description: 'First Name',
		selector: row => row?.firstname,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

	{
		name: 'Last Name',
		key: 'lastname',
		description: 'Last Name',
		selector: row => row?.lastname,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'payment',
		key: 'payment',
		description: 'Payment',
		selector: row =>
			row?.paymentinfo
				.map(item => `${item.paymentmode} - `)
				.join('')
				.slice(0, -2),
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'age',
		key: 'age',
		description: 'Age',
		selector: row =>
			row?.dob ? formatDistanceToNowStrict(new Date(row?.dob)) : '',
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

	{
		name: 'gender',
		key: 'gender',
		description: 'Gender',
		selector: row => row?.gender,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'phone',
		key: 'phone',
		description: 'Phone',
		selector: row => row?.phone,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'email',
		key: 'email',
		description: 'Email',
		selector: row => row?.email,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'tags',
		key: 'tags',
		description: 'Tags',
		selector: row => row?.clientTags,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

];

export const principalData = [
  {
    firstname: "Motun",
    lastname: "Oyewole",
    paymentinfo: "Cash",
    age: "1996-11-08T21:32:26.004Z",
    gender: "Male",
    phone: "08012345678",
    email: "test@motun.com",
    clientTags: "4532",
  },
];

export const EnrolleSchema3 = [

	{
		name: 'S/N',
		key: 'sn',
		description: 'SN',
		selector: row => row.sn,
		sortable: true,
		inputType: 'HIDDEN',
		width: '50px',
	},
	{
		name: 'First Name',
		key: 'firstname',
		description: 'First Name',
		selector: row => row?.firstname,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

	{
		name: 'Last Name',
		key: 'lastname',
		description: 'Last Name',
		selector: row => row?.lastname,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'payment',
		key: 'payment',
		description: 'Payment',
		selector: row => row?.paymentinfo?.map(item => item?.paymentmode),
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'age',
		key: 'age',
		description: 'Age',
		selector: row =>
			row?.dob ? formatDistanceToNowStrict(new Date(row.dob)) : '',
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

	{
		name: 'gender',
		key: 'gender',
		description: 'Gender',
		selector: row => row?.gender,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'phone',
		key: 'phone',
		description: 'Phone',
		selector: row => row?.phone,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'email',
		key: 'email',
		description: 'Email',
		selector: row => row?.email,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'tags',
		key: 'tags',
		description: 'Tags',
		selector: row => row?.clientTags,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
];

export const EnrolleSchema4 = [
	{
		name: 'S/N',
		key: 'sn',
		description: 'SN',
		selector: row => row.sn,
		sortable: true,
		inputType: 'HIDDEN',
		width: '50px',
	},
	{
		name: 'Provider Name',
		key: 'providerName',
		description: 'Provider Name',
		selector: row => row?.organizationDetail?.facilityName,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

	{
		name: 'City',
		key: 'city',
		description: 'City',
		selector: row => row?.organizationDetail?.facilityCity,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Contact Person',
		key: 'contactPerson',
		description: 'Contact Person',
		selector: row => row?.organizationDetail?.facilityOwner,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Phone',
		key: 'phone',
		description: 'Phone',
		selector: row => row?.organizationDetail?.facilityContactPhone,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

	{
		name: 'Category',
		key: 'category',
		description: 'Category',
		selector: row => row?.organizationDetail?.facilityCategory,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Status',
		key: 'status',
		description: 'Status',
		selector: row => (row?.active ? 'Active' : 'Inactive'),
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
];

export const EnrolleSchema5 = [
	{
		name: 'S/N',
		key: 'sn',
		description: 'SN',
		selector: row => row.sn,
		sortable: true,
		inputType: 'HIDDEN',
		width: '50px',
	},
	{
		name: 'HMO Name',
		key: 'providerName',
		description: 'Provider Name',
		selector: row => row?.facilityName,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Address',
		key: 'address',
		description: 'Address',
		selector: row => row?.facilityAddress,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

	{
		name: 'City',
		key: 'city',
		description: 'City',
		selector: row => row?.facilityCity,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Contact Person',
		key: 'contactPerson',
		description: 'Contact Person',
		selector: row => row?.facilityOwner,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Phone',
		key: 'phone',
		description: 'Phone',
		selector: row => row?.facilityContactPhone,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

	{
		name: 'Category',
		key: 'category',
		description: 'Category',
		selector: row => row?.facilityCategory,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
];

export const FinInfoSchema = [
	{
		name: 'S/N',
		key: 'sn',
		description: 'SN',
		selector: row => row.sn,
		sortable: true,
		inputType: 'HIDDEN',
		width: '50px',
	},
	{
		name: 'type',
		key: 'type',
		description: 'Type',
		selector: row => row?.paymentmode,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'principal',
		key: 'principal',
		description: 'Principal',
		selector: row => row?.principalName,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'organization',
		key: 'organization',
		description: 'Organization',
		selector: row => row?.organizationName,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'hmoagent',
		key: 'hmoagent',
		description: 'HMO Agent',
		selector: row => row?.agentName,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'plan',
		key: 'plan',
		description: 'Plan',
		selector: row => row?.plan,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'active',
		key: 'active',
		description: 'Active',
		selector: row => (row?.active ? 'Yes' : 'No'),
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},

];

export const preAuthSchema = [
	{
		name: 'Date/Time',
		key: 'sn',
		description: 'Enter name of Disease',
		selector: (row, i) => row.createdAt,
		sortable: true,
		required: true,
		inputType: 'HIDDEN',
	},
	{
		name: "Patient's Name",
		key: 'clientname',
		description: 'Enter client name',
		selector: row => <PatientName id={row.beneficiary} />,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Policy ID',
		key: 'bills',
		description: 'Enter bills',
		selector: row => row.policyid,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Provider',
		key: 'sn',
		description: 'Enter name of Disease',
		selector: (row, i) => row.provider,
		sortable: true,
		required: true,
		inputType: 'HIDDEN',
	},

	{
		name: 'Status',
		key: 'bills',
		description: 'Enter bills',
		selector: 'status',
		cell: row => row.status,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Emergency',
		key: 'bills',
		description: 'Enter bills',
		selector: row => row.emergency,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
];

export const complaintSchema = [
	{
		name: 'Compliant',
		key: 'compliants',
		selector: row => row.complaints,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Duration',
		key: 'duration',
		selector: row => row.duration,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
];
export const diagnosisSchema = [
	{
		name: 'Diagnosis Type',
		key: 'type',
		selector: row => row.type,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Code',
		key: 'code',
		selector: row => row.code,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
	{
		name: 'Comment',
		key: 'comment',
		selector: row => row.comment,
		sortable: true,
		required: true,
		inputType: 'TEXT',
	},
];

export const serviceSchema = [
	{
		name: 'S/N',
		key: 'sn',
		description: 'SN',
		selector: row => row.sn,
		sortable: true,
		inputType: 'HIDDEN',
	},
	{
		name: 'item',
		key: 'item',
		description: 'Item',
		selector: row => row.item,
		sortable: true,
		inputType: 'TEXT',
	},
	{
		name: 'QTY',
		key: 'Quantity',
		selector: row => row.quantity,
		sortable: true,
		inputType: 'TEXT',
	},
	{
		name: 'Unit Price',
		key: 'unitPrice',
		description: 'Unit Price',
		selector: row => row.unitPrice,
		sortable: true,
		inputType: 'TEXT',
	},
	{
		name: 'Total Amount',
		key: 'total',
		selector: row => row.total,
		sortable: true,
		inputType: 'TEXT',
	},
];

import { InputType } from '../schema/util';

export const getCaseDefinitionSchema = (facilityId) => [
  {
    name: 'SN',
    key: 'sn',
    description: 'SN',
    selector: (row) => row.sn,
    sortable: true,
    inputType: InputType.HIDDEN,
  },
  {
    name: 'Facility',
    key: 'facility',
    description: 'Facility',
    sortable: true,
    inputType: InputType.HIDDEN,
    defaultValue: facilityId,
  },
  {
    name: 'Notification Type',
    key: 'notificationtype',
    description: 'Choose Notification Type',
    selector: (row) => row.notificationtype,
    sortable: true,
    inputType: InputType.SELECT_LIST,
    options: ['Immediate Notification', 'Weekly', 'Monthly'],
  },
  {
    name: 'Disease',
    key: 'disease',
    description: 'Name of Disease',
    selector: (row) => row.disease?.name,
    sortable: true,
    inputType: InputType.SNOMED,
  },
  {
    name: 'Symptoms',
    key: 'symptoms',
    selector: (row, show) =>
      show === true &&
      row.observations.filter((obj) => obj.category === 'symptoms'),
    description: 'Symptoms',
    inputType: InputType.MULTIPLE_ADD,
    schema: [
      {
        name: 'SN',
        key: 'sn',
        description: 'SN',
        selector: (row) => row.sn,
        sortable: true,
        inputType: InputType.HIDDEN,
      },
      {
        name: 'Symptom',
        key: 'name',
        description: 'Symptom',
        selector: (row) => row.name,
        sortable: true,
        required: true,
        inputType: InputType.TEXT,
      },
      {
        name: 'Category',
        key: 'category',
        description: 'Symptom',
        selector: (row) => row.category,
        sortable: true,
        required: true,
        defaultValue: 'symptoms',
        inputType: InputType.HIDDEN,
      },
      {
        name: 'Duration',
        key: 'duration',
        description: 'Duration',
        selector: (row) => row.duration,
        sortable: true,
        required: true,
        inputType: InputType.TEXT,
      },
      {
        name: 'Required',
        key: 'required',
        description: 'Required',
        selector: (row) => (row.required ? 'YES' : 'NO'),
        sortable: true,
        required: true,
        inputType: InputType.BOOLEAN_CHECK,
        options: ['Required'],
      },
    ],
  },
  {
    name: 'Clinical Signs',
    key: 'findings',
    th: true,
    selector: (row, show) =>
      show === true &&
      row.observations.filter((obj) => obj.category === 'Signs'),
    description: 'Clinical Signs',
    inputType: InputType.MULTIPLE_ADD,
    schema: [
      {
        name: 'Finding',
        key: 'name',
        description: 'Finding',
        selector: (row) => row.name,
        sortable: true,
        required: true,
        inputType: InputType.TEXT,
      },
      {
        name: 'Category',
        key: 'category',
        description: 'Signs',
        selector: (row) => row.category,
        sortable: true,
        required: true,
        defaultValue: 'symptoms',
        inputType: InputType.HIDDEN,
      },
      {
        name: 'Required',
        key: 'required',
        description: 'Required',
        selector: (row) => (row.required ? 'YES' : 'NO'),
        sortable: true,
        required: true,
        inputType: InputType.BOOLEAN_CHECK,
      },
    ],
  },
  {
    name: 'Laboratory Confirmation',
    key: 'labs',
    selector: (row, show) =>
      show === true &&
      row.observations.filter((obj) => obj.category === 'Laboratory'),
    th: true,
    description: 'Clinical Signs',
    inputType: InputType.MULTIPLE_ADD,
    schema: [
      {
        name: 'Lab',
        key: 'name',
        description: 'Lab',
        selector: (row) => row.lab,
        sortable: true,
        required: true,
        inputType: InputType.TEXT,
      },
      {
        name: 'Category',
        key: 'category',
        description: 'Category',
        selector: (row) => row.category,
        sortable: true,
        required: true,
        defaultValue: 'Laboratory',
        inputType: InputType.HIDDEN,
      },
      {
        name: 'Value',
        key: 'labvalue',
        description: 'Value',
        selector: (row) => row.labvalue,
        sortable: true,
        required: true,
        inputType: InputType.TEXT,
      },
    ],
  },
  {
    name: 'Management Protocol',
    key: 'treatmentprotocol',
    description: 'Management Protocol',
    sortable: true,
    required: true,
    inputType: InputType.TEXT_AREA,
  },
  {
    name: 'Choose Person to Notify',
    key: 'notifiedPerson',
    description: 'Choose Person to Notify',
    sortable: true,
    required: true,
    inputType: InputType.SELECT_LIST,
    options: [
      'Facility Focal Person',
      'DSNO',
      'Asst DSNO',
      'State Epidemiologist',
    ],
  },
];

export const SignalSchema = [];

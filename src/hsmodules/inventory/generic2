    const getFacilities= async()=>{
       
           // console.log("here b4 server")
             const findProductEntry= await OrderServ.find(
                {query: {
                    order_category:"Prescription",
                    fulfilled:false,
                    destination: user.currentEmployee.facilityDetail._id,
                    //storeId:state.StoreModule.selectedStore._id,
                    //clientId:state.ClientModule.selectedClient._id,
                    $limit:50,
                    $sort: {
                        createdAt: -1
                    }
                    }})

         //console.log("updatedorder", findProductEntry.groupedOrder)
         await setFacilities(findProductEntry.groupedOrder)
         await setState((prevstate)=>({...prevstate, currentClients:findProductEntry.groupedOrder}))
         }   

    useEffect(() => {
       // console.log("started")
        getFacilities()
        
        
        OrderServ.on('created', (obj)=>getFacilities())
        OrderServ.on('updated', (obj)=>getFacilities())
        OrderServ.on('patched', (obj)=>getFacilities()
           // console.log(facilities)
           // const updatedOne= await state.currentClients.filter(el=>JSON.stringify(el.client_id)===JSON.stringify(obj.clientId))
           // console.log("udatedone", updatedOne)
           // handleRow(updatedOne)
           // handle }
        
       )
        OrderServ.on('removed', (obj)=>getFacilities())
        return () => {
        
        }
    },[])
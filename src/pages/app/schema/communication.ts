import { Models } from '../Constants';
import { InputType } from './util';

const ChannelSchema = [
  {
    name: 'Name',
    key: 'name',
    description: 'Channel name',
    selector: (row) => row.name,
    sortable: true,
    required: true,
    inputType: InputType.TEXT,
  },
  {
    name: 'Channel Type',
    key: 'type',
    description: 'Channel type',
    selector: (row) => row.type,
    sortable: true,
    required: true,
    inputType: InputType.SELECT_LIST,
    options: ['WHATSAPP', 'SMS', 'USSD'],
  },
  {
    name: 'Provider',
    key: 'provider',
    description: 'Provider',
    selector: (row) => row.provider,
    sortable: true,
    required: true,
    inputType: InputType.SELECT_LIST,
    options: ['messagebird', 'twilo'],
  },
  {
    name: 'Base Url',
    key: 'baseUrl',
    description: 'Base Url',
    selector: (row) => row.baseUrl,
    sortable: true,
    required: true,
    inputType: InputType.TEXT,
  },
  {
    name: 'Provider Config',
    key: 'providerConfig',
    description: 'Provider Config',
    selector: (row) => JSON.stringify(row.providerConfig),
    sortable: true,
    required: true,
    inputType: InputType.TEXT_AREA,
  },
];

const ConversationConfigSchema = [
  {
    name: 'Name',
    key: 'name',
    description: 'Name',
    selector: (row) => row.name,
    sortable: true,
    required: true,
    inputType: InputType.TEXT,
  },
  {
    name: 'Channel',
    key: 'channel',
    description: 'Channel',
    selector: (row) => row.channel.name,
    sortable: true,
    required: true,
    inputType: InputType.SELECT_LIST,
    options: { model: Models.CHANNEL },
  },
  {
    name: 'Questionnaire',
    key: 'questionnaire',
    description: 'questionnaire',
    selector: (row) => row.questionnaire.name,
    sortable: true,
    required: true,
    inputType: InputType.SELECT_LIST,
    options: { model: Models.QUESTIONNAIRE },
  },
  {
    name: 'Trigger Token',
    key: 'triggerToken',
    description: 'Trigger Token',
    selector: (row) => row.triggerToken,
    sortable: true,
    required: true,
    inputType: InputType.TEXT,
  },
  {
    name: 'Sender phone number',
    key: 'senderPhoneNumber',
    description: 'Sender Phone number',
    selector: (row) => row.triggerToken,
    sortable: true,
    required: true,
    inputType: InputType.TEXT,
  },
  {
    name: 'Timeout Millis',
    key: 'timeoutMillis',
    description: 'Timeout Millis',
    selector: (row) => row.triggerToken,
    sortable: true,
    required: true,
    inputType: InputType.TEXT,
  },
  {
    name: 'Extra Data',
    key: 'extras',
    description: 'Extra Data',
    selector: (row) => row.extras,
    sortable: true,
    required: true,
    inputType: InputType.JSON,
  },
];

const QuestionnaireSchema = [
  {
    name: 'Name',
    key: 'name',
    description: 'Name',
    selector: (row) => row.name,
    sortable: true,
    required: true,
    inputType: InputType.TEXT,
  },
  {
    name: 'Short name',
    key: 'shortName',
    description: 'Short name',
    selector: (row) => row.shortName,
    sortable: true,
    required: true,
    inputType: InputType.TEXT,
  },
  {
    name: 'Questions',
    key: 'questions',
    description: 'questions',
    selector: (row) => row.questions.length,
    sortable: true,
    required: true,
    inputType: InputType.HIDDEN,
  },
];

export { ChannelSchema, ConversationConfigSchema, QuestionnaireSchema };
